#ifndef _MACRO_SP_H_
#define _MACRO_SP_H_

/**
 * @ingroup Device_Drivers
 * @{
 * 
 * @defgroup Serial_Port Serial Port
 *
 * @brief Device driver module for serial port communication.
 *
 * This module provides the necessary functionality to communicate with a serial port (UART).
 * It includes functions for initializing the serial port, sending and receiving data and handling interrupts. 
 * The module also contains definitions for relevant registers.
 * On top of that it also includes the implementation of a queue used for communication.
 *
 * @{
 */

#define COM1_BASE 0x3F8	/**< @brief Base address of the first serial port of the PC */
#define COM1_IRQ 4	/**< @brief IRQ line of the first serial port of the PC */

#define RBR 0		/**< @brief Receiver Buffer - Register to read the characters received from the serial line. Must set DLAB to 0 to access */
#define THR 0		/**< @brief Transmitter Holding - Register to write the characters to send to the serial line. Must set DLAB to 0 to access */
#define IER 1		/**< @brief Interrupt Enable - Register to control the interrupts generated by the UART */
#define IIR 2		/**< @brief Interrupt Identification Register - Register that contains several status bits relevant to handle interrupts. It includes also some bits pertaining to the status of FIFO operation */
#define FCR 2		/**< @brief FIFO Control - Register to control the operation of the FIFO buffers, if available */
#define LCR 3		/**< @brief Line Control - Register to configure the different asynchronous serial communication parameters */
#define LSR 5		/**< @brief Line Status - Register that contains several status bits regarding the serial communication */

#define DLL 0		/**< @brief Divisor Latch Least - LSB of clock divisor for setting the bit-rate. Must set DLAB to 1 to access */
#define DLM 1		/**< @brief Divisor Latch Most - MSB of clock divisor for setting the bit-rate. Must set DLAB to 1 to access */

/** }@ 
 * }@
*/

#endif
